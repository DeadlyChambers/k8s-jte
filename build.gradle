plugins {
  // used to packate these libraries as a jenkins plugin
  id 'groovy'
  id 'org.jenkins-ci.jpi' version '0.43.0'
  id 'jacoco'
  id "com.diffplug.gradle.spotless" version "3.29.0"
  id 'codenarc'
}

// packaging info
jenkinsPlugin{
  jenkinsVersion = "2.346.2"
  shortName = "jte-library-scaffold"
  // will be the value in the drop down in Jenkins UI
  displayName = "JTE Library Scaffold"
   disabledTestInjection = false
    localizerOutputDir = "${project.buildDir}/generated-src/localizer"
    configureRepositories = false
    configurePublishing = true
}

repositories {
    mavenCentral()
    maven { url "https://repo.jenkins-ci.org/public/" }
    maven { url "https://repo.jenkins-ci.org/releases" }
    maven { url "https://repo.maven.apache.org/maven2" }

}

group = 'org.jenkins-ci.plugins'
version = '2.5.2'
description = 'Allows users to create tool-agnostic, templated pipelines to be shared by multiple teams'

// an artifact required by how Jenkins Spock is hard-coded
project.buildDir = "target" 

// determine test files
def tests = [ "test" ]
fileTree("libraries").visit{ FileVisitDetails details ->
  if(details.file.isDirectory() && details.file.path ==~ ".*libraries/.*/test"){
    tests << details.file.path
  }
}

// don't compile libraries
compileGroovy.enabled = false 

sourceSets{
  main{
    groovy{
      srcDirs = [ "libraries" ]
    }
  }
  test{
    output.resourcesDir("${buildDir}/test-classes")
    groovy{
      srcDirs = tests
    }
    resources{
      srcDirs = [ "libraries" ]
    }
  }
}

dependencies {
    // unit test framework deps
    implementation group: 'com.homeaway.devtools.jenkins', name: 'jenkins-spock', version: '2.1.5'
    implementation group: 'javax.servlet', name: 'javax.servlet-api', version:'4.0.1'
    implementation group: 'org.codehaus.groovy', name: 'groovy-all', version:'3.0.13'

     

  
    // our plugin deps
      // plugin dependencies
    implementation 'org.jenkins-ci.plugins.workflow:workflow-multibranch:2.20'
    implementation 'org.jenkins-ci.plugins.workflow:workflow-api:2.28'
    implementation 'org.jenkins-ci.plugins:branch-api:2.0.20'
    implementation 'org.jenkins-ci.plugins:scm-api:2.2.7'
    implementation 'org.jenkins-ci.plugins:junit:1.24'
    implementation 'org.jenkins-ci.plugins:script-security:1.76'
    implementation 'org.jenkinsci.plugins:pipeline-model-definition:1.8.4' // version declarative started supporting JTE
    implementation 'org.jgrapht:jgrapht-core:1.4.0'

    //our plugin
    implementation group: 'org.jenkins-ci.plugins', name: "templating-engine", version: "2.5.2"

testImplementation 'junit:junit:4.12'
    testImplementation 'org.spockframework:spock-core:1.3-groovy-2.4'
    testImplementation 'net.bytebuddy:byte-buddy:1.10.7' // used by Spock
    testImplementation 'org.objenesis:objenesis:3.1'     // used by Spock
   
      testImplementation(group: "org.jenkins-ci.main", name: "jenkins-test-harness", version: "2.71")
    testImplementation(group: "org.jenkins-ci.plugins.workflow", name: "workflow-support", classifier: "tests")
    testImplementation(group: "org.jenkins-ci.plugins", name: "scm-api", version: "2.3.0", classifier: "tests")
    testImplementation(group: 'org.jenkins-ci.plugins', name: 'git', version:'4.7.1') {
        exclude(module: 'httpclient')
        exclude(module: 'annotation-indexer')
    }
    testImplementation 'org.jenkins-ci.plugins:token-macro:2.13'
    testImplementation 'org.jenkins-ci.plugins:matrix-project:1.18'
    testImplementation 'org.jenkins-ci.plugins.workflow:workflow-aggregator:2.6'
    testImplementation 'org.jenkins-ci.plugins.workflow:workflow-step-api:2.19'
 }

jacocoTestReport {
    reports {
        html.enabled true
    }
}

spotless{
    groovy{
        target = fileTree("src/main/groovy") + fileTree(dir: "src/main/resources", include: "**/*.groovy") + fileTree("src/test/groovy")
        trimTrailingWhitespace()
        indentWithSpaces()
        endWithNewline()
        licenseHeaderFile 'groovy.header'
    }
}

codenarc {
    toolVersion = '1.6.1'
    configFile = file('./config/codenarc/rules.groovy')

}

codenarcMain{
    source = fileTree("src/main/groovy") + fileTree(dir: "src/main/resources", include: "**/*.groovy")
}

codenarcTest{
    configFile = file('./config/codenarc/rulesTest.groovy')
}

task codenarc {
    description = "Evaluate code against CodeNarc"
    dependsOn = [ 'codenarcMain', 'codenarcTest' ]
}

sourceSets {
    main{
        java{
            srcDirs = []
        }
        groovy {
            srcDirs = ["src/main/groovy", "src/main/java"]
            exclude "**/package-info.groovy"
        }
    }
}

groovydoc{
    source fileTree("src/main/groovy")
}

/**
 * this is necessary so that the groovydocs show up as the javadocs
 * on the jenkins plugin site
 */
task javadocJar(type: Jar) {
    description "An archive of the JavaDocs for Maven Central"
    classifier "javadoc"
    from groovydoc
}

tasks.register('printJTEVersion'){
  doLast{
    println version
  }
}